#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
"""

import requests
import time
import json
import sys

def check_task_status(task_id, base_url="http://localhost:5000"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏"""
    try:
        response = requests.get(f"{base_url}/status/{task_id}")
        if response.status_code == 200:
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def cancel_task(task_id, base_url="http://localhost:5000"):
    """–û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–¥–∞—á—É"""
    try:
        response = requests.post(f"{base_url}/cancel/{task_id}")
        if response.status_code == 200:
            print("‚úÖ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω—ã: {e}")
        return False

def monitor_task(task_id, base_url="http://localhost:5000", interval=10):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∑–∞–¥–∞—á—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º"""
    print(f"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á–∏ {task_id}")
    print("=" * 50)
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á–∏")
    print()
    
    start_time = time.time()
    last_progress = -1
    last_progress_time = start_time
    
    try:
        while True:
            status = check_task_status(task_id, base_url)
            
            if status is None:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏")
                time.sleep(interval)
                continue
            
            current_time = time.time()
            elapsed = current_time - start_time
            
            print(f"[{time.strftime('%H:%M:%S')}] –ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: {elapsed:.1f}—Å")
            print(f"–°—Ç–∞—Ç—É—Å: {status.get('status', 'unknown')}")
            print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {status.get('progress', 0)}%")
            
            if 'current_file' in status and 'total_files' in status:
                print(f"–§–∞–π–ª—ã: {status['current_file']}/{status['total_files']}")
            
            if 'error' in status:
                print(f"–û—à–∏–±–∫–∞: {status['error']}")
                break
            
            if status.get('status') == 'completed':
                print("‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                if 'result_file' in status:
                    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {status['result_file']}")
                break
            
            if status.get('status') == 'error':
                print("‚ùå –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
                break
            
            if status.get('status') == 'cancelled':
                print("üö´ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
                break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
            current_progress = status.get('progress', 0)
            if current_progress != last_progress:
                print(f"üîÑ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑–º–µ–Ω–∏–ª—Å—è: {last_progress}% ‚Üí {current_progress}%")
                last_progress = current_progress
                last_progress_time = current_time
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≤–∏—Å –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
                time_since_progress = current_time - last_progress_time
                if time_since_progress > 300:  # 5 –º–∏–Ω—É—Ç –±–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                    print(f"‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –º–µ–Ω—è–ª—Å—è {time_since_progress:.1f} —Å–µ–∫—É–Ω–¥")
            
            print("-" * 30)
            time.sleep(interval)
            
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
        print("–û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É...")
        if cancel_task(task_id, base_url):
            print("–ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã—Ö–æ–¥ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.")
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É. –í—ã—Ö–æ–¥ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_progress.py <task_id> [base_url] [interval]")
        print("–ü—Ä–∏–º–µ—Ä: python test_progress.py 9b60dfea-4dc0-4030-99d3-1f0c534e7217")
        sys.exit(1)
    
    task_id = sys.argv[1]
    base_url = sys.argv[2] if len(sys.argv) > 2 else "http://localhost:5000"
    interval = int(sys.argv[3]) if len(sys.argv) > 3 else 10
    
    monitor_task(task_id, base_url, interval) 